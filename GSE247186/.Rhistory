setwd("/Volumes/MAHDI//PhD/B394a/GSE247186")
setwd("/Volumes/MAHDI//PhD/B394a/GSE247186")
# load counts table from GEO
urld <- "https://www.ncbi.nlm.nih.gov/geo/download/?format=file&type=rnaseq_counts"
path <- paste(urld, "acc=GSE247186", "file=GSE247186_raw_counts_GRCh38.p13_NCBI.tsv.gz", sep="&");
tbl <- as.matrix(data.table::fread(path, header=T, colClasses="integer"), rownames=1)
# pre-filter low count genes
# keep genes with at least 2 counts > 10
keep <- rowSums( tbl >= 10 ) >= 2
tbl <- tbl[keep, ]
# log transform raw counts
# instead of raw counts can display vst(as.matrix(tbl)) i.e. variance stabilized counts
dat <- log10(tbl + 1)
# box-and-whisker plot
dev.new(width=3+ncol(tbl)/6, height=5)
par(mar=c(7,4,2,1))
boxplot(dat, boxwex=0.7, notch=T, main="GSE247186", ylab="lg(cnt + 1)", outline=F, las=2)
dev.off()
# UMAP plot (dimensionality reduction)
library(umap)
dat <- dat[!duplicated(dat), ] # first remove duplicates
ump <- umap(t(dat), n_neighbors = 14, random_state = 123)
plot(ump$layout, main="GSE247186 UMAP plot, nbrs =14", xlab="", ylab="", pch=20, cex=1.5)
library(car)
pointLabel(ump$layout, labels = rownames(ump$layout), method="SANN", cex=0.6)
urld <- "https://www.ncbi.nlm.nih.gov/geo/download/?format=file&type=rnaseq_counts"
path <- paste(urld, "acc=GSE247186", "file=GSE247186_raw_counts_GRCh38.p13_NCBI.tsv.gz", sep="&");
GSE247186_count <- as.matrix(data.table::fread(path, header=T, colClasses="integer"), rownames=1)
View(GSE247186_count)
#BiocManager::install("GEOquery")
library(GEOquery)
## https://bioconductor.org/packages/release/bioc/vignettes/GEOquery/inst/doc/GEOquery.html
gds <- getGEO("GSE247186")
View(gds)
Meta_GSE247186 <- pData(gds$GSE247186_series_matrix.txt.gz@phenoData)
View(Meta_GSE247186)
Meta_GSE247186 <- Meta_GSE247186[,c("title","geo_accession","characteristics_ch1.1","characteristics_ch1.2","characteristics_ch1.3","characteristics_ch1.4","description","group:ch1","infection:ch1")]
Factors_GSE247186 <- Meta_GSE247186[,c("group:ch1","infection:ch1")]
GSE247186_count
View(GSE247186_count)
# Write the names
write.table(rownames(GSE247186_count),"gene_names.entrez.txt",
col.names = FALSE,row.names = FALSE,quote=F)
# Import the information
annotgene <- read.csv("mart_export.txt",sep="\t",header = T)
######
library(NOISeq)
Factors_GSE247186 <- data.frame(Meta_GSE247186 [ colnames(GSE247186_count_filt),c("disease state:ch1")])
View(dat)
# Import the information
annotgene <- read.csv("mart_export.txt",sep="\t",header = T)
# How many genes do I get annotated?
sum(rownames(GSE247186_count) %in% annotgene$Entrezgene)
# Filter the information
annotgene <- annotgene[annotgene$Chromosome %in% c(as.character(1:22) ,"X","Y"),]
sum(rownames(GSE247186_count) %in% annotgene$Entrezgene)
## Annotation... solving some issues...
rownames(annotgene) <- annotgene$Entrezgene
annotgene[annotgene$Entrezgene=="132989",]
annotgene_filt <- annotgene[!duplicated(annotgene$Entrezgene),]
sum(rownames(GSE247186_count) %in% annotgene$Entrezgene)
sum(annotgene_filt$Entrezgene %in% rownames(GSE247186_count))
annotgene_filt[annotgene_filt$Entrezgene=="132989",]
## Overlap between annotation and gnes
rownames(annotgene_filt) <- as.character(annotgene_filt$Entrezgene)
sum(as.character(rownames(annotgene_filt)) %in% rownames(GSE247186_count))
##  Work with the annotated genes!
GSE247186_count_filt <- GSE247186_count[rownames(GSE247186_count) %in% rownames(annotgene_filt),]
GSE247186_count_exc <-GSE247186_count[!(rownames(GSE247186_count) %in% rownames(annotgene_filt)),]
annotgene_ord <- annotgene_filt[rownames(GSE247186_count_filt ),]
sum(rownames(annotgene_ord)==rownames(GSE247186_count_filt))
View(annotgene_ord)
View(annotgene)
# Import the information
annotgene <- read.csv("mart_export.txt",sep="\t",header = T)
# How many genes do I get annotated?
sum(rownames(GSE247186_count) %in% annotgene$Entrezgene)
annotgene$Entrezgene
# Import the information
annotgene <- read.csv("mart_export.txt",sep="\t",header = T)
View(annotgene)
# How many genes do I get annotated?
sum(rownames(GSE247186_count) %in% annotgene$NCBI.gene..formerly.Entrezgene..ID)
# Filter the information
annotgene <- annotgene[annotgene$Chromosome %in% c(as.character(1:22) ,"X","Y"),]
sum(rownames(GSE247186_count) %in% annotgene$NCBI.gene..formerly.Entrezgene..ID)
## Annotation... solving some issues...
rownames(annotgene) <- annotgene$Entrezgene
annotgene[annotgene$Entrezgene=="132989",]
annotgene_filt <- annotgene[!duplicated(annotgene$Entrezgene),]
sum(rownames(GSE247186_count) %in% annotgene$Entrezgene)
sum(annotgene_filt$Entrezgene %in% rownames(GSE247186_count))
annotgene_filt[annotgene_filt$Entrezgene=="132989",]
## Overlap between annotation and gnes
rownames(annotgene_filt) <- as.character(annotgene_filt$Entrezgene)
sum(as.character(rownames(annotgene_filt)) %in% rownames(GSE247186_count))
##  Work with the annotated genes!
GSE247186_count_filt <- GSE247186_count[rownames(GSE247186_count) %in% rownames(annotgene_filt),]
GSE247186_count_exc <-GSE247186_count[!(rownames(GSE247186_count) %in% rownames(annotgene_filt)),]
annotgene_ord <- annotgene_filt[rownames(GSE247186_count_filt ),]
sum(rownames(annotgene_ord)==rownames(GSE247186_count_filt))
View(annotgene)
View(annotgene_ord)
Factors_GSE247186 <- data.frame(Meta_GSE247186 [ colnames(GSE247186_count),c("group:ch1","infection:ch1")])
colnames(Factors_GSE247186)[1]<- "Group"
data_NOISEQ <- readData(data = GSE247186_count,
length=abs(annotgene$end-annotgene$start),
gc=annotgene$GC,
biotype= annotgene$type ,
chromosome = annotgene_ord[,c("Chromosome","start","end")],
factors = Factors_GSE247186)
data_NOISEQ <- readData(data = GSE247186_count,
length=abs(annotgene$end-annotgene$start),
gc=annotgene$GC,
biotype= annotgene$type ,
chromosome = annotgene[,c("Chromosome","start","end")],
factors = Factors_GSE247186)
data_NOISEQ <- readData(data = GSE247186_count,
length=abs(annotgene$end-annotgene$start),
gc=annotgene$GC,
biotype= annotgene$type ,
chromosome = annotgene[,c("Chromosome.scaffold.name","Gene.start..bp.","Gene.end..bp.")],
factors = Factors_GSE247186)
myexplodata <- dat(data_NOISEQ, type = "biotype")
explo.plot(myexplodata, plottype = "persample")
mynicedata <- dat2save(myexplodata)
mybiodetection <- dat(data_NOISEQ, k = 0, type = "biodetection", factor = NULL)
lengthuse <- abs(annotgene_ord$end-annotgene_ord$start)
